{"version":3,"file":"static/js/868.ff8d008e.chunk.js","mappings":"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","sources":["components/MovieDetails/StyledDetails.jsx","components/MovieDetails/Details.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst StyledDetails = styled.div`\ndisplay: flex;\ngap: 20px;\nbox-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\nrgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\npadding: 25px;\nborder-radius: 10px;\nmargin-bottom: 20px;\ncolor:white;\nh2,h3,h4,{\nmargin:0;\n}\np{\nfont-size:20px;\n}\n`;\n\n\nconst StyledInformation = styled.div`\ndisplay:flex;\ngap:20px;\njustify-content: start;\n`;\n\nexport {StyledInformation, StyledDetails};","import PropTypes from \"prop-types\";\nimport { StyledDetails } from \"./StyledDetails\";\n\n\nexport default function Details({title, releaseYear, score, image, overview, genres,}) {\nreturn (\n<StyledDetails>\n{image ? (\n <img\n src={`https://image.tmdb.org/t/p/w200/${image}`}\n alt=\"\"\n width=\"200px\"\n height=\"300px\"\n />\n ) : (\n  <img\n  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/Placeholder_no_text.svg/800px-Placeholder_no_text.svg.png\"\n  alt=\"Actors\"\n  width=\"200px\"\n  height=\"300px\"\n  />\n )}\n\n <div>\n <h2> {title} ({releaseYear}) </h2>\n <p>Score: {score}%</p>\n <h3>Overview:</h3>\n <p>{overview}</p>\n <h4>Genres:</h4>\n <p>{genres.join(', ')}</p>\n </div>\n</StyledDetails>\n);\n}\n\nDetails.propTypes = {\ntitle: PropTypes.string,\nreleaseYear: PropTypes.number,\nscore: PropTypes.number,\nimage: PropTypes.string,\noverview: PropTypes.string,\ngenres: PropTypes.arrayOf(PropTypes.string),\n};","import { MovieDetails } from \"components/API/API\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport { useParams, useLocation, Outlet,NavLink } from \"react-router-dom\";\nimport {SyncLoader, RingLoader } from \"react-spinners\"\nimport Details from \"components/MovieDetails/Details\";\nimport {StyledInformation} from \"components/MovieDetails/StyledDetails\";\nimport styled from \"@emotion/styled\";\nimport {BsFillArrowDownCircleFill, BsFillArrowLeftCircleFill} from \"react-icons/bs\";\nimport {FaPeopleCarry} from \"react-icons/fa\";\nimport {VscOpenPreview} from \"react-icons/vsc\";\n\n\nconst DetailsPageLink = styled(NavLink)`\nfont-size: 20px;\nall: unset;\nwidth: 100px;\nheight: 30px;\nfont-size: 16px;\nborder-radius:10px;\ncolor: white;\ncursor: pointer;\npadding: 10px 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ntransition: all 0.4s;\nmargin-bottom: 20px;\nbackground-color:#067937;\n\n:hover {\n  color: #2ecc71;\n  background-color:#080e2c;\n}\n}\n`;\n\nexport default function MovieDetailsPage() {\n    const {movieID} = useParams();\n\n    const [title, setTitle] = useState('');\n    const [image, setImage] = useState('');\n    const [releaseYear, setReleaseYear] = useState();\n    const [score, setScore] = useState();\n    const [overview, setOverview] = useState('');\n    const [genres, setGenres] = useState([]);\n    const [doesMovieDataLoading, setDoesMovieDataLoading] = useState(false);\n\n    const location = useLocation();\n    const LinkGoBack = useRef(location.state?.from ?? '/movies');\n\n\n    useEffect( () => {\n     setDoesMovieDataLoading(true);\n     MovieDetails(movieID).then(resp => {\n        const result = resp.data;\n        setTitle(result.title);\n        setImage(result.poster_path);\n        setReleaseYear(new Date(result.release_date).getFullYear());\n        setScore(Math.round(result.vote_average * 10));\n        setOverview(result.overview);\n        result.genres.map(({name}) =>\n        setGenres(prevName => [...prevName, name])\n        );\n     })\n     .finally( () => {\n     setDoesMovieDataLoading(false);\n     });\n    }, [movieID]);\n\n    return (\n    <>\n    <DetailsPageLink to={LinkGoBack.current}>\n    <BsFillArrowLeftCircleFill style={{marginRight: '10px'}}/>Back\n    </DetailsPageLink>\n    {doesMovieDataLoading ? (\n    <RingLoader\n    size={699}\n    color=\"green\"\n    css={{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems:'center',\n    height:'100vh'\n    }}\n    visible=\"true\"\n    />\n    ) : (\n    <Details\n    title={title}\n    releaseYear={releaseYear}\n    score={score}\n    image={image}\n    overview={overview}\n    genres={genres}\n    />\n)}\n   <div style={{display: 'flex', alignItems: 'center', gap: '10px'}}>\n   <BsFillArrowDownCircleFill style={{fill:'#067937'}} />\n    <h3 style={{color:'white'}} id=\"scroll\">Useful Information</h3>\n   </div>\n   <StyledInformation>\n    <DetailsPageLink to=\"cast\">\n    Cast\n    <FaPeopleCarry style={{marginLeft: '10px'}} />\n    </DetailsPageLink>\n    <DetailsPageLink to=\"reviews\">\n    Reviews\n    <VscOpenPreview style={{marginLeft: '10px'}} />\n    </DetailsPageLink>\n   </StyledInformation>\n   <Suspense\n    fallback = {\n    <SyncLoader\n    height=\"120%\"\n    width=\"100%\"\n    radius=\"9\"\n    color=\"#067937\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperClassName=\"\"\n    visible=\"true\"\n    />\n    }\n    >\n <Outlet />\n</Suspense>\n\n    </>\n);\n}"],"names":["StyledDetails","styled","StyledInformation","Details","title","releaseYear","score","image","overview","genres","src","alt","width","height","join","DetailsPageLink","NavLink","MovieDetailsPage","movieID","useParams","useState","setTitle","setImage","setReleaseYear","setScore","setOverview","setGenres","doesMovieDataLoading","setDoesMovieDataLoading","location","useLocation","LinkGoBack","useRef","state","from","useEffect","MovieDetails","then","resp","result","data","poster_path","Date","release_date","getFullYear","Math","round","vote_average","map","name","prevName","finally","to","current","style","marginRight","RingLoader","size","color","css","display","justifyContent","alignItems","visible","gap","fill","id","marginLeft","Suspense","fallback","SyncLoader","radius","ariaLabel","wrapperClassName"],"sourceRoot":""}